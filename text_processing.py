"""
Module for processing the text of HTML pages.
"""
### IMPORTS ###################################################################
from bs4 import BeautifulSoup as Soup
import nltk
import re

### PREP ######################################################################

### Provided Stop Words ###
STOPS = [
    'i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your',
    'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she',
    'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their',
    'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that',
    'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being',
    'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an',
    'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of',
    'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into',
    'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from',
    'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again',
    'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how',
    'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some',
    'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too',
    'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', 'id',
    'var', 'function', 'js', 'd', 'script', '\'script', 'fjs', 'document', 'r',
    'b', 'g', 'e', '\'s', 'c', 'f', 'h', 'l', 'k'
]


### CODE ######################################################################
def get_request_natural_language(request):
    """
    Take an html request and processes it to get word lists.

    Args:
        - request: Assumed to be generated by requests.get(<url>)

    Returns:
        - results (dict): A dictionary of word lists. Includes:
            results['raw']: the text list with no punctuation
            results['no_stop_words']: results['raw'] with STOPS words removed.

    """
    ### Prepare the text. ###
    raw = Soup(request.text, 'html.parser').get_text()
    nltk.data.path.append('./nltk_data/')  # set the path
    tokens = nltk.word_tokenize(raw)
    text = nltk.Text(tokens)

    ### Remove Punctuation & STOPS words###
    non_punctuation = re.compile('.*[A-Za-z].')
    raw_words = [word for word in text if non_punctuation.match(word)]
    no_stop_words = [word for word in raw_words if word.lower() not in STOPS]

    ### Save the results ###
    results = {}
    results['raw'] = raw_words
    results['no_stops'] = no_stop_words

    return results
